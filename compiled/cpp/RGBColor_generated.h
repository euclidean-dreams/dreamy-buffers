// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_RGBCOLOR_IMPRESARIOSERIALIZATION_H_
#define FLATBUFFERS_GENERATED_RGBCOLOR_IMPRESARIOSERIALIZATION_H_

#include "flatbuffers/flatbuffers.h"

namespace ImpresarioSerialization {

struct RGBColor;

FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(1) RGBColor FLATBUFFERS_FINAL_CLASS {
 private:
  uint8_t red_;
  uint8_t green_;
  uint8_t blue_;

 public:
  RGBColor() {
    memset(static_cast<void *>(this), 0, sizeof(RGBColor));
  }
  RGBColor(uint8_t _red, uint8_t _green, uint8_t _blue)
      : red_(flatbuffers::EndianScalar(_red)),
        green_(flatbuffers::EndianScalar(_green)),
        blue_(flatbuffers::EndianScalar(_blue)) {
  }
  uint8_t red() const {
    return flatbuffers::EndianScalar(red_);
  }
  uint8_t green() const {
    return flatbuffers::EndianScalar(green_);
  }
  uint8_t blue() const {
    return flatbuffers::EndianScalar(blue_);
  }
};
FLATBUFFERS_STRUCT_END(RGBColor, 3);

}  // namespace ImpresarioSerialization

#endif  // FLATBUFFERS_GENERATED_RGBCOLOR_IMPRESARIOSERIALIZATION_H_
