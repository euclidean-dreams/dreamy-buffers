// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_PARAMETER_IMPRESARIOSERIALIZATION_H_
#define FLATBUFFERS_GENERATED_PARAMETER_IMPRESARIOSERIALIZATION_H_

#include "flatbuffers/flatbuffers.h"

namespace ImpresarioSerialization {

struct Parameter;
struct ParameterBuilder;

struct Parameter FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef ParameterBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_FIELD = 4,
    VT_VALUE = 6
  };
  uint64_t field() const {
    return GetField<uint64_t>(VT_FIELD, 0);
  }
  float value() const {
    return GetField<float>(VT_VALUE, 0.0f);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<uint64_t>(verifier, VT_FIELD) &&
           VerifyField<float>(verifier, VT_VALUE) &&
           verifier.EndTable();
  }
};

struct ParameterBuilder {
  typedef Parameter Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_field(uint64_t field) {
    fbb_.AddElement<uint64_t>(Parameter::VT_FIELD, field, 0);
  }
  void add_value(float value) {
    fbb_.AddElement<float>(Parameter::VT_VALUE, value, 0.0f);
  }
  explicit ParameterBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<Parameter> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<Parameter>(end);
    return o;
  }
};

inline flatbuffers::Offset<Parameter> CreateParameter(
    flatbuffers::FlatBufferBuilder &_fbb,
    uint64_t field = 0,
    float value = 0.0f) {
  ParameterBuilder builder_(_fbb);
  builder_.add_field(field);
  builder_.add_value(value);
  return builder_.Finish();
}

inline const ImpresarioSerialization::Parameter *GetParameter(const void *buf) {
  return flatbuffers::GetRoot<ImpresarioSerialization::Parameter>(buf);
}

inline const ImpresarioSerialization::Parameter *GetSizePrefixedParameter(const void *buf) {
  return flatbuffers::GetSizePrefixedRoot<ImpresarioSerialization::Parameter>(buf);
}

inline bool VerifyParameterBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifyBuffer<ImpresarioSerialization::Parameter>(nullptr);
}

inline bool VerifySizePrefixedParameterBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifySizePrefixedBuffer<ImpresarioSerialization::Parameter>(nullptr);
}

inline void FinishParameterBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<ImpresarioSerialization::Parameter> root) {
  fbb.Finish(root);
}

inline void FinishSizePrefixedParameterBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<ImpresarioSerialization::Parameter> root) {
  fbb.FinishSizePrefixed(root);
}

}  // namespace ImpresarioSerialization

#endif  // FLATBUFFERS_GENERATED_PARAMETER_IMPRESARIOSERIALIZATION_H_
